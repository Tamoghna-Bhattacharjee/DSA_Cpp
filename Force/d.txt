#include <bits/stdc++.h>
// #include <ext/pb_ds/assoc_container.hpp>
// #include <ext/pb_ds/tree_policy.hpp>
// using namespace __gnu_pbds;
using namespace std;

#define lli long long int 
#define ld long double
#define vi vector<int>
#define vlli vector<lli>
#define vpii vector<pair<int, int>>
#define pb push_back 

template<typename T> void debug(T _a) {cout << _a << " ";}
template<typename T1, typename T2> void debug(pair<T1, T2> _p) {cout<<"{";debug(_p.first);cout<<": ";debug(_p.second);cout<<"}\n";}
template<typename T> void debug(vector<T> _aa) {for (auto h: _aa) debug(h); cout << endl;}
template<typename T> void debug(deque<T> _aa) {for (auto h: _aa) debug(h); cout << endl;}
template<typename T> void debug(multiset<T> _aa) {for (auto h: _aa) debug(h); cout << endl;}
template<typename T> void debug(set<T> _aa) {for (auto h: _aa) debug(h); cout << endl;}
template<typename T1, typename T2> void debug(map<T1, T2> _mm) {for (auto h: _mm) debug(h);}

// typedef tree<int, null_type, less<int>, 
//             rb_tree_tag, tree_order_statistics_node_update> ordered_set;

const lli INF = 1e18, MOD = 1e9 + 7;
const int N = 1e6;
const int di[] = {-1,0,1,0}, dj[] = {0,1,0,-1};
const string YN[] = {"NO", "YES"};

deque<int> f(lli k, set<int> &s) {
    deque<int> res;
    debug(s); cout << k << endl;
    if (k <= 0 || s.empty()) return res;
    int n = s.size();
    if (k == 1) {
        for (int i: s) res.pb(i);
        return res;
    }
    int msb, bitCnt;
    while (!s.empty()) {
        msb = log2(k);
        bitCnt = msb + 1;
        if (n-bitCnt-1 > 0) break;
        res.push_front(*s.begin()); s.erase(s.begin());
        k -= (1 << msb);
        n--;
    }
    if (n-bitCnt-1 > 0 && !s.empty()) res.push_front(*s.begin()), s.erase(s.begin()), n--;
    while (n-bitCnt-1 > 0 && !s.empty()) {
        res.pb(*s.begin()); s.erase(s.begin());
        n--;
    }
    debug(res);
    deque<int> t = f(k, s);
    for(int i: t) res.pb(i);
    return res;
}

void solve() {
    lli n, k; cin >> n >> k;
    set<int> s;
    for (int i = 1; i <= n; i++) s.insert(i);
    debug(f(k,s));
}   
  
int main() {
    #ifndef ONLINE_JUDGE
        freopen("input.txt","r",stdin);
        freopen("output.txt","w",stdout);
    #endif
    ios::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(0);
    cout << fixed << setprecision(9);
    int t = 1; cin >> t;
    for (int _i = 1; _i <= t; _i++) {
        //cout << "Case #" << _i << ": ";
        solve();
    }
}